module full_adder (
    input  wire a,     // First input bit
    input  wire b,     // Second input bit
    input  wire cin,   // Carry-in
    output wire sum,   // Sum output
    output wire cout   // Carry-out
);
    assign sum  = a ^ b ^ cin;
    assign cout = (a & b) | (b & cin) | (a & cin);
endmodule


module ripple_carry_adder_4bit (
    input  wire [3:0] a,     // First 4-bit input
    input  wire [3:0] b,     // Second 4-bit input
    input  wire       cin,   // Initial carry-in
    output wire [3:0] sum,   // 4-bit sum output
    output wire       cout   // Final carry-out
);
    wire c1, c2, c3; // Intermediate carry wires

    // Instantiate four full adders
    full_adder fa0 (
        .a(a[0]),
        .b(b[0]),
        .cin(cin),
        .sum(sum[0]),
        .cout(c1)
    );
    full_adder fa1 (
        .a(a[1]),
        .b(b[1]),
        .cin(c1),
        .sum(sum[1]),
        .cout(c2)
    );
    full_adder fa2 (
        .a(a[2]),
        .b(b[2]),
        .cin(c2),
        .sum(sum[2]),
        .cout(c3)
    );
    full_adder fa3 (
        .a(a[3]),
        .b(b[3]),
        .cin(c3),
        .sum(sum[3]),
        .cout(cout)
    );
endmodule
